services:
  - type: web
    name: web
    runtime: node
    region: ohio
    plan: pro
    rootDir: .
    buildFilter:
      paths:
        - "apps/web/**"
        - "packages/**"
        - "turbo.json"
        - "pnpm*"
    buildCommand: |
      corepack enable
      export PNPM_HOME="$HOME/.local/share/pnpm"
      export PATH="$PNPM_HOME:$PATH"
      pnpm install -g turbo
      NODE_ENV=development pnpm install --no-frozen-lockfile --recursive
      turbo build --filter=web...
    startCommand: cd apps/web && PORT=10000 HOSTNAME=0.0.0.0 pnpm start
    healthCheckPath: /
    # Optionally add repo/branch/autodeploy here
    envVars:
      - key: NEXT_PUBLIC_API_URL
        fromService:
          name: api
          type: web
          envVarKey: RENDER_EXTERNAL_URL
      - key: NODE_ENV
        value: production
      - key: TURBO_REMOTE_ONLY
        value: "true"
      - key: TURBO_TEAM
        value: "your-team-name"
      - key: TURBO_TOKEN
        sync: false
      - key: PNPM_VERSION
        value: "9.0.0"
      - key: PORT
        value: "10000"

  - type: web
    name: api
    runtime: node
    region: ohio
    plan: pro
    rootDir: .
    buildFilter:
      paths:
        - "apps/api/**"
        - "packages/**"
        - "turbo.json"
        - "pnpm*"
    buildCommand: |
      corepack enable
      export PNPM_HOME="$HOME/.local/share/pnpm"
      export PATH="$PNPM_HOME:$PATH"
      pnpm install -g turbo
      NODE_ENV=development pnpm install --no-frozen-lockfile --recursive
      turbo build --filter=api...
    startCommand: cd apps/api && PORT=4000 pnpm start:prod
    healthCheckPath: /api/health
    # Optionally add repo/branch/autodeploy here
    envVars:
      - key: NODE_ENV
        value: production
      - key: WEB_URL
        fromService:
          name: web
          type: web
          envVarKey: RENDER_EXTERNAL_URL
      - key: HASURA_URL
        fromService:
          name: hasura
          type: web
          envVarKey: RENDER_EXTERNAL_URL
      - key: HASURA_ADMIN_SECRET
        sync: false
      - key: TURBO_REMOTE_ONLY
        value: "true"
      - key: TURBO_TEAM
        value: "your-team-name"
      - key: TURBO_TOKEN
        sync: false
      - key: PNPM_VERSION
        value: "9.0.0"
      - key: PORT
        value: "4000"
      - key: DATABASE_URL
        fromDatabase:
          name: postgres
          property: connectionString

  - type: web
    name: hasura
    env: docker
    dockerfilePath: ./Dockerfile.hasura
    region: ohio
    plan: free
    healthCheckPath: /healthz
    envVars:
      - key: HASURA_GRAPHQL_DATABASE_URL
        fromDatabase:
          name: postgres
          property: connectionString
      - key: HASURA_GRAPHQL_ENABLE_CONSOLE
        value: "false"
      - key: HASURA_GRAPHQL_DEV_MODE
        value: "false"
      - key: HASURA_GRAPHQL_ENABLED_LOG_TYPES
        value: "startup, http-log, webhook-log, websocket-log, query-log"
      - key: HASURA_GRAPHQL_ADMIN_SECRET
        sync: false
      - key: HASURA_GRAPHQL_CORS_DOMAIN
        fromService:
          name: web
          type: web
          envVarKey: RENDER_EXTERNAL_URL

databases:
  - name: pegasus
    plan: free
    region: ohio
    ipAllowList: [] # Only allow internal connections
