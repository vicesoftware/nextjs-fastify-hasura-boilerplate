# render.yaml
services:
  - type: web
    name: web
    env: node
    region: ohio
    plan: free
    rootDir: .
    buildFilter:
      paths:
        - "apps/web/**"
        - "packages/**"
        - "turbo.json"
        - "pnpm*"
    buildCommand: |
        corepack enable
        # Install dependencies
        pnpm install --no-frozen-lockfile
        # Build API types first
        cd packages/api-types && pnpm build
        # Build web app
        cd ../../apps/web && pnpm build
    startCommand: cd apps/web && PORT=10000 pnpm start
    healthCheckPath: /api/health
    port: 10000
    envVars:
      - key: NEXT_PUBLIC_API_URL
        value: "${api.url}/api"
      - key: NODE_ENV
        value: production
      - key: TURBO_REMOTE_ONLY
        value: "true"
      - key: TURBO_TEAM
        value: "your-team-name"
      - key: TURBO_TOKEN
        sync: false
      - key: PNPM_VERSION
        value: "9.0.0"
      - key: PORT
        value: "10000"

  - type: web
    name: api
    env: node
    region: ohio
    plan: free
    rootDir: .
    buildFilter:
      paths:
        - "apps/api/**"
        - "packages/**"
        - "turbo.json"
        - "pnpm*"
    buildCommand: |
        export NODE_ENV=production
        corepack enable
        # Install dependencies
        pnpm install --no-frozen-lockfile
        # Build API types first
        cd packages/api-types && pnpm build
        # Build API app
        cd ../../apps/api && pnpm build
    startCommand: cd apps/api && PORT=4000 pnpm start
    healthCheckPath: /api/health
    port: 4000
    envVars:
      - key: NODE_ENV
        value: production
      - key: WEB_URL
        fromService:
          type: web
          name: web
          property: url
      - key: TURBO_REMOTE_ONLY
        value: "true"
      - key: TURBO_TEAM
        value: "your-team-name"
      - key: TURBO_TOKEN
        sync: false
      - key: PNPM_VERSION
        value: "9.0.0"
      - key: PORT
        value: "4000"
      # Database connection variables
      - key: DATABASE_URL
        fromService:
          type: pserv
          name: app-postgres
          property: connectionString
      - key: POSTGRES_USER
        fromService:
          type: pserv
          name: app-postgres
          property: user
      - key: POSTGRES_PASSWORD
        fromService:
          type: pserv
          name: app-postgres
          property: password
      - key: POSTGRES_DB
        fromService:
          type: pserv
          name: app-postgres
          property: database


# Uncomment below to add Redis
# - type: redis
#   name: app-redis
#   ipAllowList: []  # Only allow internal connections
#   plan: free

# PostgreSQL Database
- type: pserv
  name: app-postgres
  env: postgres
  plan: free
  region: ohio
  ipAllowList: []  # Only allow internal connections
  disk:
    name: data
    mountPath: /var/lib/postgresql/data
    sizeGB: 10